name: Manual Publish to NPM

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., patch, minor, major, or specific version like 1.0.0)'
        required: true
        default: 'patch'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com/'
          scope: '@gftdcojp'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8.15.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

      - name: Build package
        run: pnpm build

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Version bump
        run: |
          if [[ "${{ github.event.inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            pnpm version ${{ github.event.inputs.version }} --no-git-tag-version
          else
            pnpm version ${{ github.event.inputs.version }} --no-git-tag-version
          fi

      - name: Commit version bump
        run: |
          git add package.json
          git commit -m "ðŸš€ Release v$(node -p "require('./package.json').version")"
          git tag "v$(node -p "require('./package.json').version")"
          git push origin main --tags

      - name: Publish to GitHub Package Registry
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: |
            ## Changes
            - Automated release from GitHub Actions
            
            ## Installation
            ```bash
            npm install @gftdcojp/gftd-orm@${{ steps.version.outputs.version }}
            ```
          draft: false
          prerelease: false 